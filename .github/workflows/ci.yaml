name: Terraform Provision

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply (Manual Approval)
        if: ${{ github.event_name == 'workflow_dispatch' || github.event_name == 'push' }}
        uses: actions/github-script@v6
        with:
          script: |
            const approve = await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: context.workflow,
              ref: context.ref,
              inputs: {
                action: 'apply'
              }
            });
            console.log(approve);

      - name: Terraform Apply
        if: ${{ github.event.inputs.action == 'apply' && github.ref == 'refs/heads/main' }}
        run: terraform apply -auto-approve tfplan

      - name: Terraform Destroy (Manual Trigger)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        uses: actions/github-script@v6
        with:
          script: |
            const approve = await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: context.workflow,
              ref: context.ref,
              inputs: {
                action: 'destroy'
              }
            });
            console.log(approve);

      - name: Terraform Destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        run: terraform destroy -auto-approve




# name: Terraform Provision

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   terraform:
#     runs-on: ubuntu-latest
    
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Terraform
#         uses: hashicorp/setup-terraform@v2
#         with:
#           terraform_version: 1.5.7

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v2
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ap-south-1

#       - name: Terraform Init
#         run: terraform init

#       - name: Terraform Format Check
#         run: terraform fmt -check

#       - name: Terraform Validate
#         run: terraform validate

#       - name: Terraform Plan
#         id: plan
#         run: terraform plan -out=tfplan

#       - name: Terraform Apply
#         if: github.ref == 'refs/heads/main' && github.event_name == 'push'
#         run: terraform apply -auto-approve tfplan

#       - name: Terraform Destroy (on PR close)
#         if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == false
#         run: terraform destroy -auto-approve
